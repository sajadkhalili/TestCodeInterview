<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>$(DotNetVersion)</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Asp.Versioning.Mvc.ApiExplorer" />
    <PackageReference Include="FluentValidation" />
    <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" />
    <PackageReference Include="NSwag.AspNetCore" />

    <PackageReference Include="Swashbuckle.AspNetCore" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>

    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\01-Core\SSF.Surveys.Application\SSF.Surveys.Application.csproj" />
    <ProjectReference Include="..\..\01-Core\SSF.Surveys.Domain.Shared\SSF.Surveys.Domain.Shared.csproj" />
    <ProjectReference Include="..\..\02-Infra\SSF.Surveys.EF.Commands\SSF.Surveys.EF.Commands.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>
  <Choose>
    <!-- Condition: Check if SSF.SerilogRegistration.csproj exists -->
    <When Condition="Exists('$(FrameworkUrl)\src\SSF.SerilogRegistration\SSF.SerilogRegistration.csproj')" />
    <!-- Otherwise: If SSF.SerilogRegistration.csproj doesn't exist -->
    <Otherwise>
      <ItemGroup>
        <!-- Reference SSF.SerilogRegistration package with version 1.0.9 -->
        <PackageReference Include="SSF.SerilogRegistration" />
      </ItemGroup>
    </Otherwise>
  </Choose>

  <Choose>
    <!-- Condition: Check if SSF.Infrastructure.Implementations.csproj exists -->
    <When Condition="Exists('$(FrameworkUrl)\src\SSF.Infrastructure.Implementations\SSF.Infrastructure.Implementations.csproj')">
      <ItemGroup>
        <!-- Use ProjectReference if SSF.Infrastructure.Implementations.csproj exists -->
        <ProjectReference Include="$(FrameworkUrl)\src\SSF.Infrastructure.Implementations\SSF.Infrastructure.Implementations.csproj" />
      </ItemGroup>
    </When>
    <!-- Otherwise: If SSF.Infrastructure.Implementations.csproj doesn't exist -->
    <Otherwise>
      <ItemGroup>
        <!-- Reference SSF.Infrastructure.Implementations package with version 1.0.9 -->
        <PackageReference Include="SSF.Infrastructure.Implementations" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <Choose>
    <!-- Condition: Check if SSF.Core.Utilities.csproj exists -->
    <When Condition="Exists('$(FrameworkUrl)\src\SSF.Core.Utilities\SSF.Core.Utilities.csproj')">

      <ItemGroup>
        <!-- Use ProjectReference if SSF.Core.Utilities.csproj exists -->
        <ProjectReference Include="$(FrameworkUrl)\src\SSF.Core.Utilities\SSF.Core.Utilities.csproj" />
      </ItemGroup>
    </When>
    <!-- Otherwise: If SSF.Core.Utilities.csproj doesn't exist -->
    <Otherwise>
      <ItemGroup>
        <!-- Reference SSF.Core.Utilities package with version 1.0.9 -->
        <PackageReference Include="SSF.Core.Utilities" />
      </ItemGroup>
    </Otherwise>
  </Choose>
</Project>
